{"version":3,"sources":["api/api.js","actions/index.js","actions/types.js","components/Dropdown.js","components/Sidebar.js","components/MovieItem.js","components/Random.js","components/BestMovies.js","components/Explore.js","components/MoviesByCriteriaForm.js","components/Custom.js","components/App.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","auth","params","include_adult","fetchMoviesByCriteria","formValues","newQuery","dispatch","a","console","log","endPoint","endPointAppendix","Object","entries","map","query","join","api","get","response","type","payload","data","fetchGenreList","genres","forEach","genre","name","id","DropDown","onChange","e","props","target","value","this","options","option","className","renderOptions","Component","Sidebar","fetchLanguageList","to","connect","state","languages","iso","iso_639_1","englishName","english_name","MovieItem","movie","title","overview","ratings","vote_average","releaseDate","release_date","poster","poster_path","languageAbbreviated","original_language","languageUnabrreviated","languageList","filter","language","src","Home","generateRandomMovie","onClick","randomMovie","movies","latestResponse","latestMovieId","randomMovieId","Math","ceil","random","randomResponse","BestMovies","bestMovies","fetchBestMovies","renderBestMoviesList","results","Explore","genreId","page","isFetching","renderMovieList","length","onSelectGenre","setState","prevState","handleScroll","bottomOffset","document","documentElement","scrollHeight","window","innerHeight","scrollY","totalPages","fetchMoviesByGenre","addEventListener","prevProps","Dropdown","purpose","moviesByGenre","isGenreChanged","MoviesByCriteriaForm","renderSelect","formProps","input","renderInput","label","meta","autoComplete","renderError","error","touched","onSubmit","Form","handleSubmit","Field","component","step","WrappedMoviesByCriteriaForm","reduxForm","form","values","validate","Custom","isFormVisible","onFormToggleClick","toggleForm","onCustomClick","moviesByCriteria","App","path","Random","exact","combineReducers","action","total_pages","reduxFormReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.eadb946f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    auth: {\r\n        'api_key': '55881c34587ea582a685d26399d1be47'\r\n    },\r\n    params: {\r\n        include_adult: false\r\n    }\r\n})\r\n\r\n\r\n\r\n// https://api.themoviedb.org/3/movie/550?api_key=55881c34587ea582a685d26399d1be47","import api from \"../api/api\";\r\n\r\nimport { RANDOM_MOVIE, FETCH_GENRES, BEST_MOVIES, FETCH_MOVIES_BY_GENRE, FETCH_LANGUAGES, FETCH_BY_CRITERIA } from \"./types\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchMoviesByCriteria = (formValues, newQuery) => async dispatch => {\r\n    console.log('formvalues MOVIE CRIETEIEA ACTION', formValues)\r\n    let endPoint = \"discover/movie?api_key=55881c34587ea582a685d26399d1be47\";\r\n    const endPointAppendix = Object.entries(formValues).map(query => {\r\n        \r\n            console.log('QUERY FROM MOVIE CRIETEIEA ACTION', query)\r\n        \r\n        \r\n        \r\n        return  query[0] === 'vote_average' ? `${query[0]}.gte=${query[1]}` : `${query[0]}=${query[1]}`}).join('&');     //there got to be a better way\r\n    endPoint = endPointAppendix ? `${endPoint}&${endPointAppendix}` : endPoint;\r\n    console.log('ENDPOINT FROM MOVIES BY CRITERIA ATION',endPoint)\r\n    const response = await api.get(endPoint);\r\n    console.log('MOVIES BY CRITERIA RESPONSE', response)\r\n    \r\n    dispatch({\r\n      type: FETCH_BY_CRITERIA,\r\n      payload: [response.data, newQuery]\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchLanguageList = () => async dispatch => {\r\n    const response = await api.get(\r\n      \"configuration/languages?api_key=55881c34587ea582a685d26399d1be47\"\r\n    );\r\n    const languages = response.data.map(({ iso_639_1: iso, english_name: englishName }) => { return { iso, englishName }});\r\n    \r\n    dispatch({\r\n      type: FETCH_LANGUAGES,\r\n      payload: languages\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchGenreList = () => async dispatch => {\r\n  const response = await api.get(\r\n    \"genre/movie/list?api_key=55881c34587ea582a685d26399d1be47&language=en-US\"\r\n  );\r\n  const genres = {};\r\n  response.data.genres.forEach(genre => genres[genre.name] = genre.id)\r\n  dispatch({\r\n    type: FETCH_GENRES,\r\n    payload: genres\r\n  });\r\n};\r\n\r\n\r\nexport const fetchMoviesByGenre = (genreId, isGenreChanged, page) => async dispatch => {\r\n  const response = await api.get(\r\n    `discover/movie?api_key=55881c34587ea582a685d26399d1be47&page=${page}&with_genres=${genreId}`\r\n  );\r\n  \r\n  dispatch({\r\n    type: FETCH_MOVIES_BY_GENRE,\r\n    payload: [response.data, isGenreChanged]\r\n  });\r\n};\r\n\r\n\r\nexport const generateRandomMovie = () => async dispatch => {\r\n  const latestResponse = await api.get(\r\n    \"movie/latest?api_key=55881c34587ea582a685d26399d1be47\"\r\n  );\r\n  const latestMovieId = latestResponse.data.id;\r\n  const randomMovieId = Math.ceil(Math.random() * latestMovieId); //maybe sholdt be ceil!!!\r\n  const randomResponse = await api.get(\r\n    `movie/${randomMovieId}?api_key=55881c34587ea582a685d26399d1be47`\r\n  );\r\n  const randomMovie = randomResponse.data;\r\n  \r\n  dispatch({\r\n    type: RANDOM_MOVIE,\r\n    payload: randomMovie\r\n  });\r\n};\r\n\r\n\r\nexport const fetchBestMovies = () => async dispatch => {\r\n  const bestMovies = await api.get(\r\n    \"movie/top_rated?api_key=55881c34587ea582a685d26399d1be47&page=1\"\r\n  );\r\n  \r\n  dispatch({\r\n    type: BEST_MOVIES,\r\n    payload: bestMovies.data.results\r\n  });\r\n};\r\n\r\n\r\n// export const fetchTopMovies = category => async dispatch => {\r\n//   ////////NOT SURE WE WANT CATEGORY\r\n//   const latestResponse = await api.get(\r\n//     \"movie/latest?api_key=55881c34587ea582a685d26399d1be47\"\r\n//   );\r\n//   const latestMovieId = latestResponse.data.id;\r\n//   const randomMovieId = Math.ceil(Math.random() * latestMovieId); //maybe sholdt be ceil!!!\r\n//   const randomResponse = await api.get(\r\n//     `movie/${randomMovieId}?api_key=55881c34587ea582a685d26399d1be47`\r\n//   );\r\n//   const randomMovie = randomResponse.data;\r\n//   console.log(latestResponse);\r\n//   dispatch({\r\n//     type: TOP_MOVIES,\r\n//     payload: topMovies\r\n//   });\r\n// };\r\n","export const RANDOM_MOVIE = 'RANDOM_MOVIE';\r\nexport const FETCH_GENRES = 'FETCH_GENRES';\r\nexport const BEST_MOVIES = 'BEST_MOVIES';\r\nexport const FETCH_MOVIES_BY_GENRE = 'FETCH_MOVIES_BY_GENRE';\r\nexport const FETCH_LANGUAGES = 'FETCH_LANGUAGES';\r\nexport const FETCH_BY_CRITERIA = 'FETCH_BY_CRITERIA';\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nclass DropDown extends Component {\r\n\r\n  renderOptions() {\r\n    return Object.entries(this.props.options).map(option => {\r\n      return (\r\n\r\n        // <div className=\"item\" data-value={option[1]}>{option[0]}</div>\r\n\r\n\r\n        // <div className=\"item\" data-value={option[1]}>{option[0]}</div>\r\n<option value={option[1]}>{option[0]}</option> \r\n\r\n//         // <div className=\"item\">\r\n//         //   {option}\r\n//         // </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n    //     <div id=\"itdd\" className=\"ui dropdown search button\">\r\n    //     <span className=\"text\">Click to select</span>\r\n    //     <div className=\"menu\">\r\n            \r\n    //         {this.renderOptions()}\r\n    //     </div>\r\n    // </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //   <div className=\"ui teal buttons\">\r\n    //     <div className=\"ui button\">{this.props.purpose}</div>\r\n    //     <div className=\"ui floating dropdown icon button\">\r\n    //       <i className=\"dropdown icon\"></i>\r\n    //       <div className=\"menu\">{this.renderOptions()}</div>\r\n    //     </div>\r\n    //   </div>\r\n\r\n <select className=\"ui dropdown\" onChange={e => this.onChange(e)}>\r\n  \r\n  {this.renderOptions()}\r\n</select> \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// {/* <div class=\"ui selection dropdown\">\r\n//   <input type=\"hidden\" name=\"genre\"/>\r\n//   <i class=\"dropdown icon\"></i>\r\n//   <div class=\"default text\">{this.props.purpose}</div>\r\n//   <div class=\"menu\">\r\n//   \r\n//   </div>\r\n// </div> */}\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchGenreList, fetchLanguageList } from \"../actions\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\n// import '../CSS/Sidebar.css';\r\n\r\nclass Sidebar extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchGenreList();\r\n    this.props.fetchLanguageList();\r\n  }\r\n\r\n  render() {\r\n    //   console.group(this.props.genres.length)\r\n    //doesnt nessecarily have to be here\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar__menu\">\r\n          <h2 className=\"sidebar__heading\">Navigate Yourself</h2>\r\n          <div className=\"sidebar__link-container\">\r\n            <Link to=\"/\" className=\"sidebar__link\">Appetizer</Link>\r\n          </div>\r\n          <div className=\"sidebar__link-container\">\r\n            <Link to=\"/best\" className=\"sidebar__link\">All Time Best</Link>\r\n          </div>\r\n          <div className=\"sidebar__link-container\">\r\n            <Link to='/explore' className=\"sidebar__link\">Explore By Genre</Link>\r\n          </div>\r\n          <div className=\"sidebar__link-container\">\r\n            <Link to=\"/custom\" className=\"sidebar__link\">Custom Search</Link>\r\n            {/* {this.props.match} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"STATE FROM HEADEr\", state);\r\n  return {\r\n    genres: state.genres.genres\r\n  }; //NOT SURE HEADER SHOUDL BE CONNECTED TO\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchGenreList, fetchLanguageList })(\r\n  Sidebar\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class MovieItem extends Component {\r\n  componentDidMount() {}\r\n  render() {\r\n    //maybe backdroppath instead of poster path\r\n    let {\r\n      title,\r\n      overview,\r\n      vote_average: ratings,\r\n      release_date: releaseDate,\r\n      poster_path: poster,\r\n      original_language: languageAbbreviated\r\n    } = this.props.movie;\r\n\r\n    const languageUnabrreviated = this.props.languageList.filter(\r\n      language => language.iso === languageAbbreviated\r\n    )[0].englishName;\r\n    return (\r\n      <div className={`${this.props.className}__item`}>\r\n        <div className={`${this.props.className}__info`}>\r\n          <h2>{title}</h2>\r\n          <p>{overview}</p>\r\n          <p>Ratings: {ratings}</p>\r\n          <p>Release Date: {releaseDate}</p>\r\n          <p>Language: {languageUnabrreviated}</p>\r\n        </div>\r\n        <div className={`${this.props.className}__img-container`}>\r\n          <img src={`https://image.tmdb.org/t/p/w200/${poster}`} className={`${this.props.className}__img`}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languageList: state.languages.languages\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { generateRandomMovie } from \"../actions\";\r\nimport MovieItem from \"./MovieItem\";\r\n\r\nexport class Home extends Component {\r\n  componentDidMount() {\r\n    this.props.generateRandomMovie();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"random__container\">\r\n        <h1 className=\"random__heading\">a random appetizer</h1>\r\n        <button className=\"random__generate-button\" onClick={() => this.props.generateRandomMovie()}>\r\n          ain't hungry yet\r\n        </button>\r\n        {this.props.randomMovie && (\r\n          <MovieItem movie={this.props.randomMovie} className=\"random\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    randomMovie: state.movies.randomMovie\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { generateRandomMovie })(Home);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchBestMovies } from \"../actions\";\r\nimport MovieItem from './MovieItem'\r\n\r\nexport class BestMovies extends Component {\r\n  renderBestMoviesList() {\r\n      console.log('BEST MOVIES DID MOUNT',this.props)\r\n    return this.props.bestMovies.map(movie => <MovieItem movie={movie} />);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchBestMovies(); \r\n\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.props.bestMovies && this.renderBestMoviesList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bestMovies: state.movies.bestMovies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBestMovies })(BestMovies);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMoviesByGenre, fetchGenreList } from \"../actions\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nclass Explore extends Component {\r\n  state = { \r\n    genreId: 12,// this.props.match.params.genre,                ///check this out\r\n    page: 1,\r\n    isFetching: false\r\n  };\r\n\r\n  renderMovieList = () => {\r\n      console.log('rendering genre list')\r\n      if (this.props.movies.movies.length) {\r\n    return this.props.movies.movies.map(movie => (\r\n      <MovieItem movie={movie} />\r\n    \r\n    ));\r\n      }\r\n  };\r\n\r\n  onSelectGenre = value => {\r\n      console.log('chacnged genre', value)\r\n    this.setState(prevState => ({\r\n        genreId: value,\r\n        page: 1\r\n    }));\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const bottomOffset =\r\n    document.documentElement.scrollHeight - (window.innerHeight + window.scrollY);\r\n      console.log('BOTTOM OFFSET', bottomOffset, window.innerHeight, window.scrollY, document.documentElement.scrollHeight)\r\n    if (\r\n        bottomOffset >= 0 && bottomOffset <= 50\r\n    //   bottomOffset <= 150 &&\r\n    //   bottomOffset >= 0 //could take care of launching only if scroll DOWN NOT UP\r\n    ) {\r\n        console.log('REACHED BOTTOM IN EXLPLORE hello')\r\n      this.setState(prevState => {\r\n        if (prevState.page < this.props.movies.totalPages) {\r\n          //could do better than  'this.props.movies.total_pages'\r\n          debugger;\r\n          return {\r\n            page: prevState.page + 1,\r\n            isFetching: true\r\n          };\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    // const genreId = this.props.match.params.genre;\r\n    \r\n    this.props.fetchMoviesByGenre(this.state.genreId, false, this.state.page);\r\n\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // const genreId = this.props.match.params.genre;\r\n    console.log('SELECTED VALUE FROM EXPLORE UPDATE', this.state.genreId)\r\n    if (this.state.genreId === prevState.genreId && this.state.page !== prevState.page) {\r\n      this.props.fetchMoviesByGenre(this.state.genreId, false, this.state.page);\r\n    } else if (this.state.genreId !== prevState.genreId) {// if (prevState.genreId !== this.state.genreId) {\r\n        this.props.fetchMoviesByGenre(this.state.genreId, true, this.state.page);\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1></h1>\r\n      {this.props.genres && <Dropdown options={this.props.genres} purpose='Genres' onChange={this.onSelectGenre}/>}\r\n      {console.log('about to render by genre list', this.props)}\r\n        {this.props.movies && this.renderMovieList()}\r\n        {this.state.isFetching && \"Loading...\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movies: state.movies.moviesByGenre,\r\n    genres: state.genres.genres\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchMoviesByGenre, fetchGenreList })(Explore);\r\n","import React, { Component } from 'react';\r\nimport { Field, Form, reduxForm } from 'redux-form';\r\nimport Dropdown from './Dropdown';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMoviesByCriteria } from '../actions';\r\n\r\n\r\nclass MoviesByCriteriaForm extends Component {\r\n\r\n    renderSelect = formProps => {           //not sure formpropess is needed\r\n        console.log('RENDERING SELECT OF CRITERIA', formProps)\r\n        return (\r\n            <Dropdown options={this.props.genres} purpose='Genres' onChange={value => formProps.input.onChange(value)}/>\r\n        );\r\n    }\r\n\r\n    onSelectGenre = value => {\r\n\r\n\r\n    }\r\n\r\n    renderInput = formProps => {\r\n        const {input, label, type, meta} = formProps;\r\n        const className = '' \r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete='off' type={type}/>\r\n                <div>{this.renderError(meta)}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderError = ({error, touched}) => {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n           \r\n                <Form className={`${this.props.className}__form`} onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                   <Field name=\"with_genres\" component={this.renderSelect}/> \r\n                   <Field name=\"language\" type=\"text\" component={this.renderInput} label=\"Enter Language\"/> \r\n                   <Field name=\"year\" type=\"number\" component={this.renderInput} label=\"Enter Year\"/> \r\n                   <Field name=\"vote_average\" type=\"number\" step=\"0.01\" component={this.renderInput} label=\"Minimum Ratings\"/>        {/*maybe step is not nessecary */}\r\n                   <Field name=\"with_keywords\" type=\"text\" component={this.renderInput} label=\"With Keywords\"/> \r\n                   <button>Go</button>\r\n                </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        genres: state.genres.genres\r\n    }\r\n}\r\n\r\nconst validate = formValues => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\nconst WrappedMoviesByCriteriaForm = connect(mapStateToProps, {\r\n    fetchMoviesByCriteria\r\n})(MoviesByCriteriaForm);\r\n\r\nexport default reduxForm({\r\n    form: 'MovieByCriteriaForm',\r\n    values: {genre: '12'},\r\n    validate\r\n})(WrappedMoviesByCriteriaForm);\r\n","import React, { Component } from 'react';\r\nimport { Field, Form, reduxForm } from 'redux-form';\r\nimport MovieItem from './MovieItem';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMoviesByCriteria } from '../actions';\r\nimport MoviesByCriteriaForm from './MoviesByCriteriaForm';\r\n\r\n\r\nexport class Custom extends Component {\r\n    state = {\r\n        page: 1,\r\n        isFormVisible: false\r\n    }\r\n\r\n    renderMovieList = () => {\r\n        console.log('PROPS FROM Custom', this.props)\r\n        if (this.props.movies.movies.length) {\r\n        return this.props.movies.movies.map(movie => \r\n          <MovieItem movie={movie} />\r\n        );\r\n        }\r\n      };\r\n\r\n      onFormToggleClick = () => {\r\n          this.toggleForm();\r\n      }\r\n\r\n      onCustomClick = e => {\r\n        //   if (this.state.isformVisible && e.)\r\n        //   this.toggleForm();\r\n      }\r\n\r\n      toggleForm = () => {\r\n          \r\n        this.setState(prevState =>  {\r\n            return {\r\n                isFormVisible: !prevState.isFormVisible\r\n        }});\r\n      }\r\n\r\n    onSubmit = formValues => {\r\n        // debugger;\r\n        this.props.fetchMoviesByCriteria(formValues, true);\r\n        this.toggleForm();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(prevState => {\r\n            return {\r\n                isFormVisible: true\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"custom\">\r\n            <div className={`custom__form-container${this.state.isFormVisible ? ' custom__form-container--visible' : ''}`}>\r\n            <MoviesByCriteriaForm onSubmit={this.onSubmit} className=\"custom\"/>\r\n            \r\n            <button className=\"custom__form-toggle\" onClick={this.onFormToggleClick}>\r\n            <span className=\"custom__form-toggle--left\"></span><span className=\"custom__form-toggle--right\"></span>\r\n            </button>\r\n            </div>\r\n            \r\n                {this.props.movies && this.renderMovieList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    // debugger;\r\n    return {\r\n        movies: state.movies.moviesByCriteria\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchMoviesByCriteria\r\n})(Custom);","import React, { Component } from \"react\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Random from \"./Random\";\r\nimport BestMovies from \"./BestMovies\";\r\nimport Explore from \"./Explore\";\r\nimport Custom from \"./Custom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchGenreList } from \"../actions\";\r\n\r\nimport api from \"../api/api\";\r\nimport '../styles/App.css';\r\n\r\nclass App extends Component {\r\n  //   async fetch() {\r\n  //     const result = await api.get(\r\n  //       \"/550?api_key=55881c34587ea582a685d26399d1be47\"\r\n  //     );\r\n  //     console.log(result);\r\n  //   }\r\n\r\n  render() {\r\n    // this.fetch();\r\n    return (\r\n      <div className=\"body\">\r\n        <Router>\r\n          <Sidebar />\r\n          <div className=\"main-container\">\r\n          <Switch>\r\n            <Route path=\"/\" component={Random} exact></Route>\r\n            <Route path=\"/best\" component={BestMovies} exact></Route>\r\n            <Route path=\"/explore\" component={Explore} exact></Route>\r\n            <Route path=\"/custom\" component={Custom} exact></Route>\r\n          </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as reduxFormReducer } from \"redux-form\";\r\n\r\nimport {\r\n  RANDOM_MOVIE,\r\n  FETCH_GENRES,\r\n  BEST_MOVIES,\r\n  FETCH_MOVIES_BY_GENRE,\r\n  FETCH_LANGUAGES,\r\n  FETCH_BY_CRITERIA\r\n} from \"../actions/types\";\r\n\r\nconst movieReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RANDOM_MOVIE:\r\n      return { ...state, randomMovie: action.payload };\r\n\r\n    case BEST_MOVIES:\r\n      return { ...state, bestMovies: action.payload };\r\n\r\n    case FETCH_BY_CRITERIA:\r\n        \r\n    \r\n            console.log(\"MOVIES BY CRITREROA \", state);\r\n            if (state.moviesByCriteria && !action.payload[1]) {\r\n              return {\r\n                ...state,\r\n                moviesByCriteria: {\r\n                  totalPages: action.payload[0].total_pages,\r\n                  movies: [\r\n                    ...state.moviesByGenre.movies,\r\n                    ...action.payload[0].results\r\n                  ]\r\n                }\r\n              };\r\n            }\r\n            \r\n            return {\r\n              ...state,\r\n              moviesByCriteria: {\r\n                totalPages: action.payload[0].total_pages,\r\n                movies: action.payload[0].results\r\n              }\r\n            };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    case FETCH_MOVIES_BY_GENRE:\r\n            // debugger;\r\n\r\n      console.log(\"MOVIES BY GENRE\", action);\r\n      if (state.moviesByGenre && !action.payload[1]) {\r\n        console.log(\"INDEED MOVIES BY GENRE EXIST IN STATE\", action.payload);\r\n        return {\r\n          ...state,\r\n          moviesByGenre: {\r\n            totalPages: action.payload[0].total_pages,\r\n            movies: [\r\n              ...state.moviesByGenre.movies,\r\n              ...action.payload[0].results\r\n            ]\r\n          }\r\n        }; //needs fixing!!!@%^&$*^&\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        moviesByGenre: {\r\n          totalPages: action.payload[0].total_pages,\r\n          movies: action.payload[0].results\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst genreReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_GENRES:\r\n      console.log(\"GENRES FROM REDUCER \", action.payload);\r\n      return { ...state, genres: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst languageReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_LANGUAGES:\r\n      console.log(\"GENRES FROM REDUCER \", action.payload);\r\n      return { ...state, languages: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  movies: movieReducer,\r\n  genres: genreReducer,\r\n  languages: languageReducer,\r\n  form: reduxFormReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers, \r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}